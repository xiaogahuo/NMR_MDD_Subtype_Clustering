#!/bin/bash
# conda activate GWAS
# nohup ./run_GWAS_QC.sh  GWAS_Prote_MDD_Subtype_Clustering > GWAS_Prote_MDD_Subtype_Clustering_QC.log &
   exp_name=$1

cp  -f "./GWAS_Script/hist_miss.R" "./${exp_name}/GWAS_QC/"
# cp  -f "./GWAS_Script/gender_check.R" "./${exp_name}/GWAS_QC/"
cp  -f "./GWAS_Script/MAF_check.R" "./${exp_name}/GWAS_QC/"
cp  -f "./GWAS_Script/hwe.R" "./${exp_name}/GWAS_QC/"
cp  -f "./GWAS_Script/check_heterozygosity_rate.R" "./${exp_name}/GWAS_QC/"
cp  -f "./GWAS_Script/heterozygosity_outliers_list.R" "./${exp_name}/GWAS_QC/"
cp  -f "./GWAS_Script/Relatedness.R" "./${exp_name}/GWAS_QC/"
cp  -f "./GWAS_Script/inversion.txt" "./${exp_name}/GWAS_QC/"

  
cd "./${exp_name}/GWAS_QC/"

# Investigate missingness per individual and per SNP and make histograms.
plink --bfile "${exp_name}" --missing
Rscript --no-save hist_miss.R

# Delete SNPs with missingness >0.2.
plink --bfile "${exp_name}" --geno 0.2 --make-bed --out "${exp_name}_2"
# Delete individuals with missingness >0.2.
plink --bfile "${exp_name}_2" --mind 0.2 --make-bed --out "${exp_name}_3"
# Delete SNPs with missingness >0.05.
plink --bfile "${exp_name}_3" --geno 0.05 --make-bed --out "${exp_name}_4"
# Delete individuals with missingness >0.05.
plink --bfile "${exp_name}_4" --mind 0.05 --make-bed --out "${exp_name}_5"

# plink --bfile "${exp_name}_5" --check-sex
# # Generate plots to visualize the sex-check results.
# Rscript --no-save gender_check.R

## 1) Delete individuals with sex discrepancy.
#grep "PROBLEM" plink.sexcheck| awk '{print$1,$2}'> sex_discrepancy.txt
## This command generates a list of individuals with the status “PROBLEM”.
#plink --bfile "${exp_name}_5" --remove sex_discrepancy.txt --make-bed --out "${exp_name}_6"
## This command removes the list of individuals with the status “PROBLEM”.

# Generate a plot of the MAF distribution.
plink --bfile "${exp_name}_5" --freq --out MAF_check
Rscript --no-save MAF_check.R

# Remove SNPs with a low MAF frequency.
plink --bfile "${exp_name}_5" --maf 0.05 --make-bed --out "${exp_name}_8"
#
## Delete SNPs which are not in Hardy-Weinberg equilibrium (HWE).
## Check the distribution of HWE p-values of all SNPs.
#
#plink --bfile "${exp_name}_8" --hardy
## Selecting SNPs with HWE p-value below 0.00001, required for one of the two plot generated by the next Rscript, allows to zoom in on strongly deviating SNPs.
#awk '{ if ($9 <0.00001) print $0 }' plink.hwe>plinkzoomhwe.hwe
#Rscript --no-save hwe.R
#
## By default the --hwe option in plink only filters for controls.
## Therefore, we use two steps, first we use a stringent HWE threshold for controls, followed by a less stringent threshold for the case data.
#plink --bfile "${exp_name}_8" --hwe 1e-6 --make-bed --out "${exp_name}_hwe_filter_step1"
#
## The HWE threshold for the cases filters out only SNPs which deviate extremely from HWE.
## This second HWE step only focusses on cases because in the controls all SNPs with a HWE p-value < hwe 1e-6 were already removed
#plink --bfile "${exp_name}_hwe_filter_step1" --hwe 1e-10 --hwe-all --make-bed --out "${exp_name}_9"
#
#plink --bfile "${exp_name}_9" --exclude inversion.txt --range --indep-pairwise 50 5 0.2 --out indepSNP
## Note, don't delete the file indepSNP.prune.in, we will use this file in later steps of the tutorial.
#
#plink --bfile "${exp_name}_9" --extract indepSNP.prune.in --het --out R_check
## This file contains your pruned data set.
#
## Plot of the heterozygosity rate distribution
#Rscript --no-save check_heterozygosity_rate.R
#
## The following code generates a list of individuals who deviate more than 3 standard deviations from the heterozygosity rate mean.
## For data manipulation we recommend using UNIX. However, when performing statistical calculations R might be more convenient, hence the use of the Rscript for this step:
#Rscript --no-save heterozygosity_outliers_list.R
#
## Output of the command above: fail-het-qc.txt .
#sed 's/"// g' fail-het-qc.txt | awk '{print$1, $2}'> het_fail_ind.txt
#
## Remove heterozygosity rate outliers.
#plink --bfile "${exp_name}_9" --remove het_fail_ind.txt --make-bed --out "${exp_name}_10"
#
## Check for relationships between individuals with a pihat > 0.2.
#plink --bfile "${exp_name}_10" --extract indepSNP.prune.in --genome --min 0.2 --out pihat_min0.2
#
## The HapMap dataset is known to contain parent-offspring relations.
## The following commands will visualize specifically these parent-offspring relations, using the z values.
#awk '{ if ($8 >0.9) print $0 }' pihat_min0.2.genome>zoom_pihat.genome
#
## Generate a plot to assess the type of relationship.
#Rscript --no-save Relatedness.R
#
#plink --bfile "${exp_name}_10" --filter-founders --make-bed --out "${exp_name}_11"
#
## Now we will look again for individuals with a pihat >0.2.
#plink --bfile "${exp_name}_11" --extract indepSNP.prune.in --genome --min 0.2 --out pihat_min0.2_in_founders
#
## For each pair of 'related' individuals with a pihat > 0.2, we recommend to remove the individual with the lowest call rate.
#plink --bfile "${exp_name}_11" --missing
## Use an UNIX text editor (e.g., vi(m) ) to check which individual has the highest call rate in the 'related pair'.